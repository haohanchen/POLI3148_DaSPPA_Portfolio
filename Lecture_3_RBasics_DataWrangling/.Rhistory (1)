library(tidyverse)
d <- read_csv("data/raw_data/V-Dem-CY-Full+Others-v13.csv")
names(d)
unique(d$year)
sorted(unique(d$year))
sort(unique(d$year))
# List years
Years <- sort(unique(d$year))
# Split into 5
length(Years)
# Split into 5
length(Years) // 5
# Split into 5
length(Years)  5
# Split into 5
length(Years) / 5
# Split Years into 5
split(Years, ceiling(length(Years) / 5))
seq_along(Years)
# Split Years into 5
split(Years, ceiling(seq_along(Years) / 5))
seq_along(Years) / 5
# Split Years into 5
split(Years, ceiling(seq_along(Years) / 40))
split(Years, ceiling(seq_along(Years) / 50))
split(Years, ceiling(seq_along(Years) / 100))
# Split Years into 5
split(Years, round(seq_along(Years) / 100))
# Split Years into 5
split(Years, floor(seq_along(Years) / 100))
# Split Years into 5
split(Years, round(seq_along(Years) / 100))
# Split Years into 5
split(Years, round(seq_along(Years) / 100)+1)
# Split Years into 5
split(Years, round(seq_along(Years) / 80)+1)
# Split Years into 5
split(Years, round(seq_along(Years) / 100)+1)
# Split Years into 5
split(Years, round(seq_along(Years) / 120)+1)
# Split Years into chunks
seq_along(Years)
# Split Years into chunks
length(Years) / 5
# Split Years into chunks
ceiling(length(Years) / 5)
rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
# Split Years into chunks
n_chunk <- 5
rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
# Split Years into chunks
n_chunk <- 4
rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
# Split Years into chunks
n_chunk <- 4
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
round(seq_along(Years) / 100)+1
split(Years, splitter)
splitter <- splitter[1:length(n_chunk)]
# Split Years into chunks
n_chunk <- 4
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(n_chunk)]
split(Years, splitter)
round(seq_along(Years) / 100)+1
# Split Years into chunks
n_chunk <- 4
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(n_chunk)]
# Split Years into chunks
n_chunk <- 4
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
splitter
split(Years, splitter)
# Split Years into chunks
n_chunk <- 4
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
Years_batch <- split(Years, splitter)
Years_batch
seq_along(Years_batch)
d %>%
filter(year %in% Years_batch[[i]])
i <- 1
d_batch <- d |> filter(year %in% Years_batch[[i]])
d_batch
paste0("data/raw_data/", "VDEM_", Years_batch[[i]][1],
Years_batch[[i]][-1], ".csv")
Years_batch[[i]][-1]
paste0("data/raw_data/", "VDEM_", Years_batch[[i]][1],
tail(Years_batch[[i]], 1), ".csv")
rev(Years_batch[[i]])[1]
paste0("data/raw_data/", "VDEM_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv")
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/raw_data/", "VDEM_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv"))
}
n_chunk <- 6
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
Years_batch <- split(Years, splitter)
Years_batch
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/raw_data/", "VDEM_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv"))
}
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/raw_data/", "VDEM_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv"))
}
n_chunk <- 8
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
Years_batch <- split(Years, splitter)
# Split the data
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/processed_data/", "VDEM_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv"))
}
d <- read_csv("data/raw_data/V-Dem-CY-Full+Others-v13.csv")
problems()
problems() %>% View()
print(n = 30)
library(tidyverse)
d <- read_csv("data/raw_data/vdem/large_do_not_push_go_github/V-Dem-CY-Full+Others-v13.csv")
list.files("data/raw_data/vdem/")
d <- read_csv("data/raw_data/vdem/large_do_not_push_to_github/V-Dem-CY-Full+Others-v13.csv")
# List years
Years <- sort(unique(d$year))
# Split Years into chunks
n_chunk <- 8
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
Years_batch <- split(Years, splitter)
# Split the data
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/raw_data/vdem/", "vdem_",
Years_batch[[i]][1], "-", rev(Years_batch[[i]])[1],
".csv"))
}
knitr::opts_chunk$set(echo = TRUE)
d <- read_csv("data/raw_data/vdem/vdem_1999_2022") # Load
d <- read_csv("data/raw_data/vdem/vdem_1999_2022.csv") # Load
d <- read_csv("data/raw_data/vdem/vdem_1999-2022.csv") # Load
library(tidyverse)
library(tidyverse)
# Split Years into chunks
n_chunk <- 8
splitter <- rep(1:n_chunk, each = ceiling(length(Years) / n_chunk))
splitter <- splitter[1:length(Years)]
Years_batch <- split(Years, splitter)
# Split the data
for (i in seq_along(Years_batch)){
d_batch <- d |> filter(year %in% Years_batch[[i]])
write_csv(d_batch, paste0("data/raw_data/vdem/", "vdem_",
Years_batch[[i]][1], "_", rev(Years_batch[[i]])[1],
".csv"))
}
list.files("data/raw_data/vdem/")
d <- read_csv("data/raw_data/vdem/vdem_1999_2022.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
d <- read_csv("data/raw_data/vdem/vdem_1999_2022.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
d <- read_csv("data/raw_data/vdem/vdem_1999_2022.csv")
View(d)
dim(d)
d <- read_csv("data/raw_data/vdem/vdem_1999_2022.csv")
library(tidyverse)
d_s <- d |>
select(country_name, country_id, year, v2x_polyarchy, e_gdp, e_gdppc)
d_s |>
rename("electral_democracy_idx" = "v2x_polyarchy",
"gdp" = "e_gdp",
"gdppc" = "e_gdppc")
d_s
d_s_2010_2020 <- d_s |> filter(year >= 2010 & year <= 2020)
git status -uno
git status -uno
